/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package model.view;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.bean.ItemVendido;
import model.bean.Pessoa;
import model.bean.PessoaFisica;
import model.bean.PessoaJuridica;
import model.bean.Produto;
import model.bean.Sessao;
import model.bean.Venda;
import model.dao.ItemVendidoDAO;
import model.dao.PessoaFisicaDAO;
import model.dao.PessoaJuridicaDAO;
import model.dao.ProdutoDAO;
import model.dao.VendaDAO;
import model.table.ItemVendidoTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import others.JNumberFormatField;
import others.Preco;

/**
 *
 * @author LUCASMATHEUSDASILVA
 */
public class TelaVenda extends javax.swing.JFrame {

    /**
     * Creates new form TelaVenda
     */
    private Venda vendaCarregada;
    private final ItemVendidoTableModel itemVendidoTableModel = new ItemVendidoTableModel();
    TelaPrincipal tp;
    
    public TelaVenda() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logoSistema_16px.png")).getImage());
        tblItensVendidos.setModel(itemVendidoTableModel);
        AutoCompleteDecorator.decorate(cmbCliente);
        AutoCompleteDecorator.decorate(cmbProduto);
        txtNumero.setEditable(false);
        txtDataVenda.setEditable(false);
        txtPrecoTotal.setEditable(false);
        txtPrecoVenda.setEditable(false);
        txtPrecoTotalVenda.setEditable(false);
        carregarClientesHabilitados();
        carregarProdutos();
        limpaCampos();
    }
    
    public TelaVenda (java.awt.Frame parent, byte tipo, Venda venda){
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/logoSistema_16px.png")).getImage());
        this.tp = (TelaPrincipal) parent;
        tblItensVendidos.setModel(itemVendidoTableModel);
        AutoCompleteDecorator.decorate(cmbCliente);
        AutoCompleteDecorator.decorate(cmbProduto);
        txtNumero.setEditable(false);
        txtDataVenda.setEditable(false);
        txtPrecoTotal.setEditable(false);
        txtPrecoVenda.setEditable(false);
        txtPrecoTotalVenda.setEditable(false);
        txtNomeUsuario.setText(Sessao.getInstance().getUsuario().getNome().toUpperCase());
        txtNomeEmpresa.setText(Sessao.getInstance().getUsuario().getEmpresa().getRazaoSocial().toUpperCase());
        Locale locale = new Locale("pt","BR");
        GregorianCalendar calendar = new GregorianCalendar(); 
        SimpleDateFormat formatador = new SimpleDateFormat("dd' de 'MMMMM' de 'yyyy",locale);
        txtData.setText(formatador.format(calendar.getTime()));
        txtUltimoAcesso.setText("Último Acesso: " + Sessao.getInstance().getUsuario().getDataUltimoAcesso());
            if(tipo==0){ //novo
                carregarClientesHabilitados();
                carregarProdutos();
                limpaCampos();
            } else if (tipo==1){ //visualizar
                this.vendaCarregada = venda;
                carregarClientes(venda.getPessoa());
                carregarProdutos();
                carregarVenda();
                habilitaBotoes();
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTituloVendas = new javax.swing.JPanel();
        lblTituloVendas = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        cmbCliente = new javax.swing.JComboBox<>();
        txtDataVenda = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        cmbTipoExibicao = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblItensVendidos = new javax.swing.JTable();
        lblProduto = new javax.swing.JLabel();
        cmbProduto = new javax.swing.JComboBox<>();
        lblQtd = new javax.swing.JLabel();
        txtPrecoTotal = new JNumberFormatField();
        lblPrecoTotal = new javax.swing.JLabel();
        txtPrecoVenda = new JNumberFormatField();
        lblPrecoVenda = new javax.swing.JLabel();
        txtQtd = new javax.swing.JSpinner();
        btnAdicionarProduto = new javax.swing.JButton();
        btnRemoverProduto = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtPrecoTotalVenda = new JNumberFormatField();
        jLabel32 = new javax.swing.JLabel();
        lblItensDeVenda = new javax.swing.JLabel();
        btnLimparSelecao = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtData = new javax.swing.JLabel();
        txtNomeUsuario = new javax.swing.JLabel();
        txtNomeEmpresa = new javax.swing.JLabel();
        txtUltimoAcesso = new javax.swing.JLabel();
        btnVoltarCancelar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestão de Vendas");
        setMinimumSize(new java.awt.Dimension(1040, 706));

        pnlTituloVendas.setBackground(new java.awt.Color(246, 91, 92));

        lblTituloVendas.setBackground(new java.awt.Color(246, 91, 92));
        lblTituloVendas.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblTituloVendas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloVendas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/venda_36px.png"))); // NOI18N
        lblTituloVendas.setText("Gestão de Vendas");

        javax.swing.GroupLayout pnlTituloVendasLayout = new javax.swing.GroupLayout(pnlTituloVendas);
        pnlTituloVendas.setLayout(pnlTituloVendasLayout);
        pnlTituloVendasLayout.setHorizontalGroup(
            pnlTituloVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTituloVendas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlTituloVendasLayout.setVerticalGroup(
            pnlTituloVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTituloVendas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(233, 234, 234));

        jPanel19.setBackground(new java.awt.Color(233, 234, 234));
        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        cmbCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbCliente.setToolTipText("");
        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });

        try {
            txtDataVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataVenda.setToolTipText("");
        txtDataVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("<html>Data de Venda: <body> <span style=\"color: red;\">*</span></body></html>");

        lblCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblCliente.setText("<html>Cliente: <body> <span style=\"color: red;\">*</span></body></html>");

        cmbTipoExibicao.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbTipoExibicao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Cliente Físico", "Cliente Jurídico" }));
        cmbTipoExibicao.setFocusable(false);
        cmbTipoExibicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoExibicaoActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel29.setText("<html>Tipo de Exibição: <body> <span style=\"color: red;\">*</span></body></html>");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("<html>Número: <body> <span style=\"color: red;\">*</span></body></html>");

        txtNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(txtNumero))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDataVenda)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel29)
                    .addComponent(cmbTipoExibicao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 524, Short.MAX_VALUE))
                    .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataVenda))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel19Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel19Layout.createSequentialGroup()
                                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbTipoExibicao)
                                    .addComponent(cmbCliente))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel20.setBackground(new java.awt.Color(233, 234, 234));
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Itens da Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        tblItensVendidos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblItensVendidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblItensVendidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItensVendidosMouseClicked(evt);
            }
        });
        tblItensVendidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblItensVendidosKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(tblItensVendidos);

        lblProduto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblProduto.setText("<html>Produto: <body> <span style=\"color: red;\">*</span></body></html>");

        cmbProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbProduto.setToolTipText("");
        cmbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProdutoActionPerformed(evt);
            }
        });

        lblQtd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblQtd.setText("<html>Qtde.: <body> <span style=\"color: red;\">*</span></body></html>");

        txtPrecoTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPrecoTotal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtPrecoTotal.setText("R$ 0,00");

        lblPrecoTotal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblPrecoTotal.setText("<html>Preço de Total: <body> <span style=\"color: red;\">*</span></body></html>");

        txtPrecoVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPrecoVenda.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtPrecoVenda.setText("R$ 0,00");

        lblPrecoVenda.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblPrecoVenda.setText("<html>Preço de Venda: <body> <span style=\"color: red;\">*</span></body></html>");

        txtQtd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtQtd.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        txtQtd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQtdStateChanged(evt);
            }
        });

        btnAdicionarProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAdicionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/inserir.png"))); // NOI18N
        btnAdicionarProduto.setText("Adicionar Produto");
        btnAdicionarProduto.setFocusable(false);
        btnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoActionPerformed(evt);
            }
        });

        btnRemoverProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnRemoverProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excluir.png"))); // NOI18N
        btnRemoverProduto.setText("Remover Produto");
        btnRemoverProduto.setFocusable(false);
        btnRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverProdutoActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel31.setText("PREÇO TOTAL:");

        txtPrecoTotalVenda.setBackground(new java.awt.Color(233, 234, 234));
        txtPrecoTotalVenda.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtPrecoTotalVenda.setForeground(new java.awt.Color(66, 180, 73));
        txtPrecoTotalVenda.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPrecoTotalVenda.setText("R$ 0,00");
        txtPrecoTotalVenda.setBorder(null);

        jLabel32.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel32.setText("ITENS DE VENDA:");

        lblItensDeVenda.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblItensDeVenda.setForeground(new java.awt.Color(66, 180, 73));
        lblItensDeVenda.setText("0");

        btnLimparSelecao.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnLimparSelecao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/limpar_18px.png"))); // NOI18N
        btnLimparSelecao.setText("Limpar Seleção");
        btnLimparSelecao.setFocusable(false);
        btnLimparSelecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparSelecaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(lblProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 417, Short.MAX_VALUE))
                            .addComponent(cmbProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(btnAdicionarProduto)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoverProduto)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimparSelecao)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrecoTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblItensDeVenda)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(lblProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                            .addComponent(lblPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPrecoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(lblPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtPrecoVenda))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoverProduto)
                    .addComponent(btnAdicionarProduto)
                    .addComponent(btnLimparSelecao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecoTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(lblItensDeVenda)))
        );

        jPanel2.setBackground(new java.awt.Color(52, 179, 160));

        txtData.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendario_18px.png"))); // NOI18N
        txtData.setText("XX de XX de XXXX");
        txtData.setFocusable(false);
        txtData.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        txtNomeUsuario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNomeUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/usuario_18px_1.png"))); // NOI18N
        txtNomeUsuario.setText("XXXXX");
        txtNomeUsuario.setFocusable(false);

        txtNomeEmpresa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNomeEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/empresa_18px.png"))); // NOI18N
        txtNomeEmpresa.setText("XXXXX");
        txtNomeEmpresa.setFocusable(false);

        txtUltimoAcesso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtUltimoAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ultimoAcesso_18px.png"))); // NOI18N
        txtUltimoAcesso.setText("Último Acesso: XX/XX/XXXX XX:XX");
        txtUltimoAcesso.setFocusable(false);
        txtUltimoAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNomeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(txtNomeEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 360, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUltimoAcesso, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtData, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeUsuario)
                    .addComponent(txtData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeEmpresa)
                    .addComponent(txtUltimoAcesso))
                .addContainerGap())
        );

        btnVoltarCancelar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnVoltarCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/voltar_cancelar.png"))); // NOI18N
        btnVoltarCancelar.setText("Voltar");
        btnVoltarCancelar.setFocusable(false);
        btnVoltarCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCancelarActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/novo.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/inserir.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setFocusable(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltarCancelar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltarCancelar)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTituloVendas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTituloVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1040, 706));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblItensVendidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItensVendidosMouseClicked
        if(tblItensVendidos.getSelectedRow()!=-1){
            cmbProduto.setSelectedItem(((ItemVendido) itemVendidoTableModel.getRow(tblItensVendidos.getSelectedRow())).getProduto());
            txtQtd.setValue(((ItemVendido) itemVendidoTableModel.getRow(tblItensVendidos.getSelectedRow())).getQtdVendida());
        }
    }//GEN-LAST:event_tblItensVendidosMouseClicked

    private void cmbTipoExibicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoExibicaoActionPerformed
        carregarClientesHabilitados();
        cmbCliente.setSelectedItem(null);
    }//GEN-LAST:event_cmbTipoExibicaoActionPerformed

    private void cmbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProdutoActionPerformed
        if(cmbProduto.getSelectedItem()!=null){
                txtPrecoVenda.setText(String.format("%.2f", ((Produto) cmbProduto.getSelectedItem()).getPrecoVenda()));
                    if(tblItensVendidos.getSelectedRow()==-1)
                        txtQtd.setValue(1);
                    
                    if(cmbProduto.getSelectedItem()!=null && tblItensVendidos.getSelectedRow()!=-1 && cmbProduto.getSelectedItem()!=((ItemVendido) itemVendidoTableModel.getRow(tblItensVendidos.getSelectedRow())).getProduto()){
                        tblItensVendidos.clearSelection();
                        txtQtd.setValue(1);
                    }
                txtPrecoTotal.setText(String.format("%.2f", ((float)((int) txtQtd.getValue()) * (Float.parseFloat(Preco.precoParaBanco(txtPrecoVenda.getText()))))));
            }
    }//GEN-LAST:event_cmbProdutoActionPerformed

    private void txtQtdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQtdStateChanged
        if(cmbProduto.getSelectedItem()==null)
            txtQtd.setValue(1);
        
        if(cmbProduto.getSelectedItem()!=null && ((Produto) cmbProduto.getSelectedItem()).getQtdDisponivel()>=(int) txtQtd.getValue()){
            if(tblItensVendidos.getSelectedRow()!=-1){
                ItemVendido itemVendido = (ItemVendido) itemVendidoTableModel.getRow(tblItensVendidos.getSelectedRow());
                itemVendido.setQtdVendida((int) txtQtd.getValue());
                itemVendidoTableModel.updateRow(tblItensVendidos.getSelectedRow(), itemVendido);
                calcularTotalVenda();
            }
        txtPrecoTotal.setText(String.format("%.2f", ((float)((int) txtQtd.getValue()) * (Float.parseFloat(Preco.precoParaBanco(txtPrecoVenda.getText()))))));
        } else if(cmbProduto.getSelectedItem()!=null)
            txtQtd.setValue(((Produto) cmbProduto.getSelectedItem()).getQtdDisponivel());
    }//GEN-LAST:event_txtQtdStateChanged

    private void btnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoActionPerformed
        adicionarProduto();
    }//GEN-LAST:event_btnAdicionarProdutoActionPerformed

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
        habilitaCampos();
    }//GEN-LAST:event_cmbClienteActionPerformed

    private void btnRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverProdutoActionPerformed
        removerProduto();
    }//GEN-LAST:event_btnRemoverProdutoActionPerformed

    private void btnVoltarCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCancelarActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Você quer mesmo voltar à tela anterior?", "Caixa de Confirmação", 0)==0)
            this.dispose();
    }//GEN-LAST:event_btnVoltarCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if(cmbCliente.getSelectedItem()!=null){
            if(itemVendidoTableModel.getRowCount()!=0){
                Venda venda = new Venda();
                venda.setDataVenda(txtDataVenda.getText());
                venda.setPrecoTotal(Float.parseFloat(Preco.precoParaBanco(txtPrecoTotalVenda.getText())));
                venda.setPessoa((Pessoa) cmbCliente.getSelectedItem());
                venda.setUsuario(Sessao.getInstance().getUsuario());
                venda.setItensVendidos(itemVendidoTableModel.getList());
                
                TelaPagamento tpg = new TelaPagamento(this, true, venda);
                tpg.setVisible(true);
            } else JOptionPane.showMessageDialog(null, "Não há nenhum item de venda!", "Caixa de Diálogo", 0);
        }  else JOptionPane.showMessageDialog(null, "Nenhum cliente foi selecionado!", "Caixa de Diálogo", 0);
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        carregarClientesHabilitados();
        limpaCampos();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void tblItensVendidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblItensVendidosKeyReleased
        if(evt.getKeyChar()==evt.VK_ENTER || evt.getKeyCode()==9 || evt.getKeyCode()==38 || evt.getKeyCode()==40){ //ENTER, TAB, CIMA, BAIXO
            if(tblItensVendidos.getSelectedRow()!=-1){
                cmbProduto.setSelectedItem(((ItemVendido) itemVendidoTableModel.getRow(tblItensVendidos.getSelectedRow())).getProduto());
                txtQtd.setValue(((ItemVendido) itemVendidoTableModel.getRow(tblItensVendidos.getSelectedRow())).getQtdVendida());
            }
        }
    }//GEN-LAST:event_tblItensVendidosKeyReleased

    private void btnLimparSelecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparSelecaoActionPerformed
            cmbProduto.setSelectedItem(null);
            txtPrecoVenda.setText(null);
            txtQtd.setValue(1);
            txtPrecoTotal.setText(null);
            tblItensVendidos.clearSelection();
            cmbProduto.requestFocus();
    }//GEN-LAST:event_btnLimparSelecaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarProduto;
    private javax.swing.JButton btnLimparSelecao;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemoverProduto;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltarCancelar;
    private javax.swing.JComboBox<Object> cmbCliente;
    private javax.swing.JComboBox<Object> cmbProduto;
    private javax.swing.JComboBox<String> cmbTipoExibicao;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblItensDeVenda;
    private javax.swing.JLabel lblPrecoTotal;
    private javax.swing.JLabel lblPrecoVenda;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQtd;
    private javax.swing.JLabel lblTituloVendas;
    private javax.swing.JPanel pnlTituloVendas;
    private javax.swing.JTable tblItensVendidos;
    private javax.swing.JLabel txtData;
    private javax.swing.JFormattedTextField txtDataVenda;
    private javax.swing.JLabel txtNomeEmpresa;
    private javax.swing.JLabel txtNomeUsuario;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPrecoTotal;
    private javax.swing.JTextField txtPrecoTotalVenda;
    private javax.swing.JTextField txtPrecoVenda;
    private javax.swing.JSpinner txtQtd;
    private javax.swing.JLabel txtUltimoAcesso;
    // End of variables declaration//GEN-END:variables

    private String definirDataVenda (){
	DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss"); 
	Date date = new Date(); 
	return dateFormat.format(date); 
    }
    
    private void habilitaBotoes(){
        desabilitaCampos();
        btnNovo.setEnabled(true);
        btnSalvar.setEnabled(false);
    }
    
    private void desabilitaBotoes(){
        habilitaCampos();
        btnNovo.setEnabled(false);
        btnSalvar.setEnabled(true);
    }
    
    private void desabilitaCampos(){
        cmbTipoExibicao.setEnabled(false);
        cmbCliente.setEnabled(false);
        lblProduto.setEnabled(false);
        cmbProduto.setEnabled(false);
        lblQtd.setEnabled(false);
        txtQtd.setEnabled(false);
        lblPrecoVenda.setEnabled(false);
        txtPrecoVenda.setEnabled(false);
        lblPrecoTotal.setEnabled(false);
        txtPrecoTotal.setEnabled(false);
        btnAdicionarProduto.setEnabled(false);
        btnRemoverProduto.setEnabled(false);
        btnLimparSelecao.setEnabled(false);
        tblItensVendidos.setEnabled(false);
    }
    
    private void habilitaCampos(){
        cmbTipoExibicao.setEnabled(true);
        cmbCliente.setEnabled(true);
            if(cmbCliente.getSelectedItem()!=null){
                lblProduto.setEnabled(true);
                cmbProduto.setEnabled(true);
                lblQtd.setEnabled(true);
                txtQtd.setEnabled(true);
                lblPrecoVenda.setEnabled(true);
                txtPrecoVenda.setEnabled(true);
                lblPrecoTotal.setEnabled(true);
                txtPrecoTotal.setEnabled(true);
                btnAdicionarProduto.setEnabled(true);
                btnRemoverProduto.setEnabled(true);
                btnLimparSelecao.setEnabled(true);
            } else {
                lblProduto.setEnabled(false);
                cmbProduto.setEnabled(false);
                lblQtd.setEnabled(false);
                txtQtd.setEnabled(false);
                lblPrecoVenda.setEnabled(false);
                txtPrecoVenda.setEnabled(false);
                lblPrecoTotal.setEnabled(false);
                txtPrecoTotal.setEnabled(false);
                btnAdicionarProduto.setEnabled(false);
                btnRemoverProduto.setEnabled(false);
                btnLimparSelecao.setEnabled(false);
            }
        tblItensVendidos.setEnabled(true);
        txtData.setVisible(true);
        txtUltimoAcesso.setVisible(true);
    }

    private void limpaCampos(){
        desabilitaBotoes();
        VendaDAO dao = new VendaDAO();
        txtNumero.setText(Integer.toString(dao.getLastCodeVenda()+1));
        txtDataVenda.setText(definirDataVenda());
        cmbTipoExibicao.setSelectedIndex(0);
        cmbCliente.setSelectedItem(null);
        cmbProduto.setSelectedItem(null);
        txtQtd.setValue(1);
        txtPrecoVenda.setText(null);
        txtPrecoTotal.setText(null);
        txtPrecoTotalVenda.setText(null);
        lblItensDeVenda.setText("0");
        itemVendidoTableModel.clearRows();
        cmbCliente.requestFocus();
    }
    
    private void carregarClientes(Object cliente){
        cmbCliente.removeAllItems();
        if (cmbTipoExibicao.getSelectedItem().equals("Todos")){
            PessoaFisicaDAO daopf = new PessoaFisicaDAO();
                for(PessoaFisica pessoaFisica: daopf.getListaPessoaFisica()){
                    cmbCliente.addItem(pessoaFisica);
                        if(cliente!=null && pessoaFisica.getIdPessoa()==((Pessoa) cliente).getIdPessoa())
                            cmbCliente.setSelectedItem(pessoaFisica);
                }
            PessoaJuridicaDAO daopj = new PessoaJuridicaDAO();
                for(PessoaJuridica pessoaJuridica: daopj.getListaPessoaJuridica()){
                    cmbCliente.addItem(pessoaJuridica);
                        if(cliente!=null && pessoaJuridica.getIdPessoa()==((Pessoa) cliente).getIdPessoa())
                            cmbCliente.setSelectedItem(pessoaJuridica);
                }
        } else if(cmbTipoExibicao.getSelectedItem().equals("Cliente Físico")){
            PessoaFisicaDAO dao = new PessoaFisicaDAO();
                for(PessoaFisica pessoaFisica: dao.getListaPessoaFisica()){
                    cmbCliente.addItem(pessoaFisica);
                        if(cliente!=null && pessoaFisica.getIdPessoa()==((Pessoa) cliente).getIdPessoa())
                            cmbCliente.setSelectedItem(pessoaFisica);
                }
        } else if (cmbTipoExibicao.getSelectedItem().equals("Cliente Jurídico")){
            PessoaJuridicaDAO dao = new PessoaJuridicaDAO();
                for(PessoaJuridica pessoaJuridica: dao.getListaPessoaJuridica()){
                    cmbCliente.addItem(pessoaJuridica);
                        if(cliente!=null && pessoaJuridica.getIdPessoa()==((Pessoa) cliente).getIdPessoa())
                            cmbCliente.setSelectedItem(pessoaJuridica);
                }
        }
    }
    
    private void carregarClientesHabilitados(){
        cmbCliente.removeAllItems();
        if (cmbTipoExibicao.getSelectedItem().equals("Todos")){
            PessoaFisicaDAO daopf = new PessoaFisicaDAO();
                for(PessoaFisica pessoaFisica: daopf.getListaPessoaFisicaHabilitada()){
                    cmbCliente.addItem(pessoaFisica);
                }
            PessoaJuridicaDAO daopj = new PessoaJuridicaDAO();
                for(PessoaJuridica pessoaJuridica: daopj.getListaPessoaJuridicaHabilitada()){
                    cmbCliente.addItem(pessoaJuridica);
                }
        } else if(cmbTipoExibicao.getSelectedItem().equals("Cliente Físico")){
            PessoaFisicaDAO dao = new PessoaFisicaDAO();
                for(PessoaFisica pessoaFisica: dao.getListaPessoaFisicaHabilitada()){
                    cmbCliente.addItem(pessoaFisica);
                }
        } else if (cmbTipoExibicao.getSelectedItem().equals("Cliente Jurídico")){
            PessoaJuridicaDAO dao = new PessoaJuridicaDAO();
                for(PessoaJuridica pessoaJuridica: dao.getListaPessoaJuridicaHabilitada()){
                    cmbCliente.addItem(pessoaJuridica);
                }
        }
    }
    
    private void carregarProdutos(){
        cmbProduto.removeAllItems();
        ProdutoDAO dao = new ProdutoDAO();
            for(Produto produto: dao.getListaProdutoVenda()){
                cmbProduto.addItem(produto);
            }
    }

    private void calcularTotalVenda(){
        double somatoria = 0;
        int qtd = 0;
            for(ItemVendido itemVendido:itemVendidoTableModel.getList()){
                    somatoria += itemVendido.getPrecoVenda()*itemVendido.getQtdVendida();
                    qtd += itemVendido.getQtdVendida();
            }
        txtPrecoTotalVenda.setText(String.format("%.2f", somatoria));
        lblItensDeVenda.setText(Integer.toString(qtd));
    }
    
    private void carregarVenda(){
        txtNumero.setText(Integer.toString(this.vendaCarregada.getIdVenda()));
        txtDataVenda.setText(vendaCarregada.getDataVenda());
        carregarClientes(vendaCarregada.getPessoa());
        cmbProduto.setSelectedItem(null);
        txtPrecoVenda.setText(null);
        txtQtd.setValue(1);
        txtPrecoTotal.setText(null);

        ItemVendidoDAO dao = new ItemVendidoDAO();
        this.vendaCarregada.setItensVendidos(dao.getListaItemVendido(this.vendaCarregada));

        int qtd = 0;
        for(ItemVendido itemVendido:vendaCarregada.getItensVendidos()){
                itemVendidoTableModel.addRow(itemVendido); 
                qtd += itemVendido.getQtdVendida();
            }
        
        txtPrecoTotalVenda.setText(String.format("%.2f", this.vendaCarregada.getPrecoTotal()));
        lblItensDeVenda.setText(Integer.toString(qtd));
    }
    
    private void adicionarProduto(){
        if(cmbProduto.getSelectedItem()!=null){
            boolean existe = false;
            if(itemVendidoTableModel.getRowCount()!=0){
                int index = 0;
                for(ItemVendido itemVendido:itemVendidoTableModel.getList()){
                    if(itemVendido.getProduto() == cmbProduto.getSelectedItem()){
                        if(((Produto) cmbProduto.getSelectedItem()).getQtdDisponivel() >= (itemVendido.getQtdVendida() + (int) txtQtd.getValue())){
                            itemVendido.setQtdVendida((itemVendido.getQtdVendida()) + (int) txtQtd.getValue());
                            itemVendido.setPrecoVenda(Float.parseFloat(Preco.precoParaBanco(txtPrecoVenda.getText())));
                            itemVendidoTableModel.updateRow(index, itemVendido);
                        } else {
                            if((((Produto) cmbProduto.getSelectedItem()).getQtdDisponivel()-itemVendido.getQtdVendida())!=0)
                                JOptionPane.showMessageDialog(null, "Não foi possível adicionar este produto. \nRestam apenas " + (((Produto) cmbProduto.getSelectedItem()).getQtdDisponivel() - itemVendido.getQtdVendida()) + " unidades!", "Caixa de Afirmação", 0);
                            else JOptionPane.showMessageDialog(null, "Não foi possível adicionar este produto. \nNão há estoque disponível!", "Caixa de Afirmação", 0);
                        }
                        existe = true;
                        break;
                    }
                    index++;
                }     
            }
                if(!existe){
                    if(((Produto) cmbProduto.getSelectedItem()).getQtdDisponivel() > 0){
                        ItemVendido itemVendido = new ItemVendido();
                        itemVendido.setProduto((Produto) cmbProduto.getSelectedItem());
                        itemVendido.setQtdVendida((int) txtQtd.getValue());
                        itemVendido.setPrecoVenda(Float.parseFloat(Preco.precoParaBanco(txtPrecoVenda.getText())));
                        itemVendidoTableModel.addRow(itemVendido);
                    } else JOptionPane.showMessageDialog(null, "Não foi possível adicionar este produto. \nTodas as unidades já foram vendidas!", "Caixa de Afirmação", 0);
            }
            cmbProduto.setSelectedItem(null);
            txtPrecoVenda.setText(null);
            txtQtd.setValue(1);
            txtPrecoTotal.setText(null);
            cmbProduto.requestFocus();
            calcularTotalVenda();
        } else JOptionPane.showMessageDialog(null, "Nenhum registro foi selecionado!", "Caixa de Afirmação", 0);    
    }
    
    private void removerProduto(){
        if(tblItensVendidos.getSelectedRow()!=-1){
            itemVendidoTableModel.removeRow(tblItensVendidos.getSelectedRow());
            cmbProduto.setSelectedItem(null);
            txtPrecoVenda.setText(null);
            txtQtd.setValue(1);
            txtPrecoTotal.setText(null);
            cmbProduto.requestFocus();
            calcularTotalVenda();
        } else JOptionPane.showMessageDialog(null, "Nenhum registro foi selecionado!", "Caixa de Afirmação", 0);
    }
    
    protected void finalizarVenda(Venda venda){
        VendaDAO dao = new VendaDAO();
        dao.adicionaVenda(venda);
        venda.setIdVenda(dao.getLastCodeVenda());
        tp.vendaTableModel.addRow(venda);
        tp.carregarTabelaProdutos();
        
        JOptionPane.showMessageDialog(this, "Registro incluído com sucesso!", "Caixa de Diálogo", 1);
            if(JOptionPane.showConfirmDialog(this, "Você quer iniciar uma nova venda?", "Caixa de Confirmação", 0)==0){
                limpaCampos();
            } else this.dispose();
    }
}
